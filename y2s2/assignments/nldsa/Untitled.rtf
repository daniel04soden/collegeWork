{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fmodern\fcharset0 Courier;\f1\fmodern\fcharset0 Courier-Oblique;}
{\colortbl;\red255\green255\blue255;\red190\green144\blue245;\red23\green22\blue35;\red247\green220\blue160;
\red129\green134\blue163;\red194\green203\blue241;\red247\green163\blue116;\red228\green140\blue156;\red121\green213\blue230;
\red89\green92\blue115;\red119\green162\blue248;\red133\green221\blue203;\red152\green224\blue144;}
{\*\expandedcolortbl;;\csgenericrgb\c74510\c56471\c96078;\csgenericrgb\c9020\c8627\c13725;\csgenericrgb\c96863\c86275\c62745;
\csgenericrgb\c50588\c52549\c63922;\csgenericrgb\c76078\c79608\c94510;\csgenericrgb\c96863\c63922\c45490;\csgenericrgb\c89412\c54902\c61176;\csgenericrgb\c47451\c83529\c90196;
\csgenericrgb\c34902\c36078\c45098;\csgenericrgb\c46667\c63529\c97255;\csgenericrgb\c52157\c86667\c79608;\csgenericrgb\c59608\c87843\c56471;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs26 \cf2 \cb3 package 
\f1\i \cf4 assignment2
\f0\i0 \cf5 ;\
\
\
\cf2 public class 
\f1\i \cf4 HDDAllocation 
\f0\i0 \cf5 \{\
	\cf2 private final int\cf5 [] \cf6 hdds\cf5 ;\
	\cf2 private final int\cf5 [] \cf6 files\cf5 ;\
	\cf2 private int\cf5 [] \cf6 res\cf5 ;\
\
	\cf2 public 
\f1\i \cf7 HDDAllocation
\f0\i0 \cf5 (\cf2 int\cf5 [] 
\f1\i \cf8 hdds
\f0\i0 \cf5 , \cf2 int\cf5 [] 
\f1\i \cf8 files
\f0\i0 \cf5 )\
\{\
		\cf2 this\cf5 .\cf6 hdds \cf9 = 
\f1\i \cf8 hdds
\f0\i0 \cf5 ;\
		\cf2 this\cf5 .\cf6 files \cf9 = 
\f1\i \cf8 files
\f0\i0 \cf5 ;\
		\cf2 this\cf5 .\cf6 res \cf9 = \cf2 new int\cf5 [
\f1\i \cf8 files
\f0\i0 \cf5 .\cf6 length\cf5 ];\
		\cf2 for \cf5 (\cf2 int \cf6 i \cf9 = \cf7 0\cf5 ; \cf6 i \cf9 < 
\f1\i \cf8 files
\f0\i0 \cf5 .\cf6 length\cf5 ; \cf6 i\cf9 ++\cf5 ) \{\
			\cf6 res\cf5 [\cf6 i\cf5 ] \cf9 = -\cf7 1\cf5 ; 
\f1\i \cf10 // -1 denotes an unallocated file...\
		
\f0\i0 \cf5 \}\
	\}\
\
	\cf2 public boolean 
\f1\i \cf11 verify
\f0\i0 \cf5 (\cf2 int 
\f1\i \cf8 fileIdx
\f0\i0 \cf5 , \cf2 int 
\f1\i \cf8 hddIdx
\f0\i0 \cf5 )\{\
		\cf2 int \cf6 allocation \cf9 = \cf7 0\cf5 ;\
		\cf2 for \cf5 (\cf2 int \cf6 i \cf9 = \cf7 0\cf5 ; \cf6 i \cf9 < \cf6 res\cf5 .\cf6 length\cf9 -\cf7 1\cf5 ; \cf6 i\cf9 ++\cf5 ) \{\
			\cf2 if \cf5 (\cf6 res\cf5 [\cf6 i\cf5 ] \cf9 == 
\f1\i \cf8 hddIdx
\f0\i0 \cf5 ) \{\
				\cf6 allocation \cf9 += \cf6 files\cf5 [\cf6 i\cf5 ];\
			\}	\
		\}\
        \cf2 return \cf6 allocation \cf9 <= \cf6 hdds\cf5 [
\f1\i \cf8 hddIdx
\f0\i0 \cf5 ];\
    \}\
\
\
	\cf2 public int\cf5 [] 
\f1\i \cf11 generate_allocation
\f0\i0 \cf5 (\cf2 int 
\f1\i \cf8 fileIdx
\f0\i0 \cf5 ) \{\
		
\f1\i \cf10 // Checking if solution reached\
		 
\f0\i0 \cf2 if \cf5 (
\f1\i \cf8 fileIdx 
\f0\i0 \cf9 == \cf6 files\cf5 .\cf6 length\cf5 ) \{\
			\cf2 return \cf6 res\cf5 ;\
		\}\
		
\f1\i \cf10 // Making our choice\
        
\f0\i0 \cf2 for \cf5 (\cf2 int \cf6 i \cf9 = \cf7 0\cf5 ; \cf6 i \cf9 < \cf6 hdds\cf5 .\cf6 length\cf5 ; \cf6 i\cf9 ++\cf5 ) \{\
                \cf6 res\cf5 [
\f1\i \cf8 fileIdx
\f0\i0 \cf5 ] \cf9 = \cf6 i\cf5 ;\
                \cf2 if \cf5 (
\f1\i \cf11 verify
\f0\i0 \cf5 (
\f1\i \cf8 fileIdx
\f0\i0 \cf5 , \cf6 i\cf5 )) \{\
					\cf2 return 
\f1\i \cf11 generate_allocation
\f0\i0 \cf5 (
\f1\i \cf8 fileIdx
\f0\i0 \cf9 +\cf7 1\cf5 );\
                \}\cf2 else\cf5 \{\
					\cf6 res\cf5 [
\f1\i \cf8 fileIdx
\f0\i0 \cf5 ] \cf9 = -\cf7 1\cf5 ; 
\f1\i \cf10 //  Backtracking/constraints\
					\cf4 System
\f0\i0 \cf5 .\cf12 out\cf5 .
\f1\i \cf11 println
\f0\i0 \cf5 (\cf13 "Epic backtrack"\cf5 );\
				\}\
        \}\
        \cf2 return \cf6 res\cf5 ;\
	\}\
\
	\cf2 public static void 
\f1\i \cf11 main
\f0\i0 \cf5 (
\f1\i \cf4 String
\f0\i0 \cf5 [] 
\f1\i \cf8 args
\f0\i0 \cf5 ) \{\
		\cf2 int\cf5 [] \cf6 hdds \cf9 = \cf5 \{\cf7 1000\cf5 , \cf7 1000\cf5 , \cf7 2000\cf5 \};\
		\cf2 int\cf5 [] \cf6 files \cf9 = \cf5 \{\cf7 300\cf5 , \cf7 200\cf5 , \cf7 300\cf5 , \cf7 1200\cf5 , \cf7 400\cf5 , \cf7 700\cf5 , \cf7 700 \cf5 \};\
		\cf2 int\cf5 [] \cf6 allocation \cf9 = \cf2 new 
\f1\i \cf7 HDDAllocation
\f0\i0 \cf5 (\cf6 hdds\cf5 , \cf6 files\cf5 ).
\f1\i \cf11 generate_allocation
\f0\i0 \cf5 (\cf7 0\cf5 );\
		\cf2 for \cf5 (\cf2 int \cf6 i\cf9 =\cf7 0\cf5 ; \cf6 i\cf9 <\cf6 allocation\cf5 .\cf6 length\cf5 ; \cf6 i\cf9 ++\cf5 ) \{\
			
\f1\i \cf4 System
\f0\i0 \cf5 .\cf12 out\cf5 .
\f1\i \cf11 println
\f0\i0 \cf5 (\cf13 "File "\cf9 +\cf6 i\cf9 +\cf13 " has size " \cf9 + \cf6 files\cf5 [\cf6 i\cf5 ] \cf9 + \cf13 "MB and goes on HDD"\cf9 +\cf6 allocation\cf5 [\cf6 i\cf5 ] \cf9 + \cf13 "."\cf5 );\
		\}\
		\cf2 for \cf5 (\cf2 int \cf6 j\cf9 =\cf7 0\cf5 ; \cf6 j\cf9 <\cf6 hdds\cf5 .\cf6 length\cf5 ; \cf6 j\cf9 ++\cf5 )\
	\{\
			\cf2 int \cf6 space_used \cf9 = \cf7 0\cf5 ;\
			\cf2 for \cf5 (\cf2 int \cf6 i\cf9 =\cf7 0\cf5 ; \cf6 i\cf9 <\cf6 allocation\cf5 .\cf6 length\cf5 ; \cf6 i\cf9 ++\cf5 ) \{\
				\cf2 if \cf5 (\cf6 allocation\cf5 [\cf6 i\cf5 ]\cf9 ==\cf6 j\cf5 ) \{\
					\cf6 space_used \cf9 += \cf6 files\cf5 [\cf6 i\cf5 ];\
				\}\
			\}\
			
\f1\i \cf4 System
\f0\i0 \cf5 .\cf12 out\cf5 .
\f1\i \cf11 println
\f0\i0 \cf5 (\cf13 "HDD"\cf9 + \cf6 j \cf9 + \cf13 " space used " \cf9 + \cf6 space_used \cf9 + \cf13 "MB / " \cf9 + \cf6 hdds\cf5 [\cf6 j\cf5 ] \cf9 + \cf13 "MB."\cf5 );\
		\}\
	\}\
\}\
\
}