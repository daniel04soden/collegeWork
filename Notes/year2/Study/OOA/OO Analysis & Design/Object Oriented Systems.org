*OOAD* is a popular technical approach for analysing and designing an
application, system or business by applying object orientated
programming. It is best conducted in an iterative way. ###
Characteristics #### Classes & Objects - Object (Instance) -
Instantiation of a class - Attributes - Information that describe the
class - State - Describes its values and relationships at a point in
time #### Methods & Messages - Methods - Behaviour of a class -
Messages - Information sent to an object to trigger a method ####
Encapsulation and Information Hiding - Encapsulation - Combination of
process & data - Information Hiding - Functionality is hidden ####
Inheritance - General classes are created (Super Classes) - Sub classes
can inherit data and methods from super classes #### Polymorphism &
Dynamic Binding - Polymorphism - Same message can have different
meanings - Dynamic Binding - Type of object is not determined until
runtime (Static Binding is the contrast) #### Abstraction - It is
non-concrete - We cannot create an object of an interface or abstract
class #### Iterative & Incremental - Undergoes continuous testing &
refinement ### Benefits - Break complex systems into smaller, more
manageable modules - Works on modules individually
