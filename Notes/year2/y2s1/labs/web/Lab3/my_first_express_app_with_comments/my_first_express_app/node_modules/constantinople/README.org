* constantinople
:PROPERTIES:
:CUSTOM_ID: constantinople
:END:
Determine whether a JavaScript expression evaluates to a constant (using
acorn). Here it is assumed to be safe to underestimate how constant
something is.

[[https://travis-ci.org/ForbesLindesay/constantinople][[[https://img.shields.io/travis/ForbesLindesay/constantinople/master.svg]]]]
[[https://gemnasium.com/ForbesLindesay/constantinople][[[https://img.shields.io/gemnasium/ForbesLindesay/constantinople.svg]]]]
[[https://www.npmjs.org/package/constantinople][[[https://img.shields.io/npm/v/constantinople.svg]]]]

** Installation
:PROPERTIES:
:CUSTOM_ID: installation
:END:
#+begin_example
npm install constantinople
#+end_example

** Usage
:PROPERTIES:
:CUSTOM_ID: usage
:END:
#+begin_src js
var isConstant = require('constantinople')

if (isConstant('"foo" + 5')) {
  console.dir(isConstant.toConstant('"foo" + 5'))
}
if (isConstant('Math.floor(10.5)', {Math: Math})) {
  console.dir(isConstant.toConstant('Math.floor(10.5)', {Math: Math}))
}
#+end_src

** API
:PROPERTIES:
:CUSTOM_ID: api
:END:
*** isConstant(src, [constants])
:PROPERTIES:
:CUSTOM_ID: isconstantsrc-constants
:END:
Returns =true= if =src= evaluates to a constant, =false= otherwise. It
will also return =false= if there is a syntax error, which makes it safe
to use on potentially ES6 code.

Constants is an object mapping strings to values, where those values
should be treated as constants. Note that this makes it a pretty bad
idea to have =Math= in there if the user might make use of =Math.random=
and a pretty bad idea to have =Date= in there.

*** toConstant(src, [constants])
:PROPERTIES:
:CUSTOM_ID: toconstantsrc-constants
:END:
Returns the value resulting from evaluating =src=. This method throws an
error if the expression is not constant.
e.g.Â =toConstant("Math.random()")= would throw an error.

Constants is an object mapping strings to values, where those values
should be treated as constants. Note that this makes it a pretty bad
idea to have =Math= in there if the user might make use of =Math.random=
and a pretty bad idea to have =Date= in there.

** License
:PROPERTIES:
:CUSTOM_ID: license
:END:
MIT
