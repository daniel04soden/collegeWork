* get-intrinsic [[https://npmjs.org/package/get-intrinsic][[[https://versionbadg.es/ljharb/get-intrinsic.svg]]]]
:PROPERTIES:
:CUSTOM_ID: get-intrinsic-version-badgenpm-version-svgpackage-url
:END:
[[https://github.com/ljharb/get-intrinsic/actions][[[https://img.shields.io/endpoint?url=https://github-actions-badge-u3jn4tfpocch.runkit.sh/ljharb/get-intrinsic]]]]
[[https://app.codecov.io/gh/ljharb/get-intrinsic/][[[https://codecov.io/gh/ljharb/get-intrinsic/branch/main/graphs/badge.svg]]]]
[[https://david-dm.org/ljharb/get-intrinsic][[[https://david-dm.org/ljharb/get-intrinsic.svg]]]]
[[https://david-dm.org/ljharb/get-intrinsic#info=devDependencies][[[https://david-dm.org/ljharb/get-intrinsic/dev-status.svg]]]]
[[file:LICENSE][[[https://img.shields.io/npm/l/get-intrinsic.svg]]]]
[[https://npm-stat.com/charts.html?package=get-intrinsic][[[https://img.shields.io/npm/dm/get-intrinsic.svg]]]]

[[https://npmjs.org/package/get-intrinsic][[[https://nodei.co/npm/get-intrinsic.png?downloads=true&stars=true]]]]

Get and robustly cache all JS language-level intrinsics at first require
time.

See the syntax described
[[https://tc39.es/ecma262/#sec-well-known-intrinsic-objects][in the JS
spec]] for reference.

** Example
:PROPERTIES:
:CUSTOM_ID: example
:END:
#+begin_src js
var GetIntrinsic = require('get-intrinsic');
var assert = require('assert');

// static methods
assert.equal(GetIntrinsic('%Math.pow%'), Math.pow);
assert.equal(Math.pow(2, 3), 8);
assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);
delete Math.pow;
assert.equal(GetIntrinsic('%Math.pow%')(2, 3), 8);

// instance methods
var arr = [1];
assert.equal(GetIntrinsic('%Array.prototype.push%'), Array.prototype.push);
assert.deepEqual(arr, [1]);

arr.push(2);
assert.deepEqual(arr, [1, 2]);

GetIntrinsic('%Array.prototype.push%').call(arr, 3);
assert.deepEqual(arr, [1, 2, 3]);

delete Array.prototype.push;
GetIntrinsic('%Array.prototype.push%').call(arr, 4);
assert.deepEqual(arr, [1, 2, 3, 4]);

// missing features
delete JSON.parse; // to simulate a real intrinsic that is missing in the environment
assert.throws(() => GetIntrinsic('%JSON.parse%'));
assert.equal(undefined, GetIntrinsic('%JSON.parse%', true));
#+end_src

** Tests
:PROPERTIES:
:CUSTOM_ID: tests
:END:
Simply clone the repo, =npm install=, and run =npm test=

** Security
:PROPERTIES:
:CUSTOM_ID: security
:END:
Please email [[https://github.com/ljharb][[cite/t:@ljharb]]] or see
https://tidelift.com/security if you have a potential security
vulnerability to report.
