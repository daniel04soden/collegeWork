* Object Oriented programming
:PROPERTIES:
:CUSTOM_ID: object-oriented-programming
:END:
- Lecturer: Bruno Andrade
- Machine Learning and Genetic Algorithms.
- No labs OOP this week (Friday)
- Compress as zip before submission

** Learning Outcomes
:PROPERTIES:
:CUSTOM_ID: learning-outcomes
:END:
- Explaining runtime organisation of OO Software
- Using debugger and testing frameworks
- Applying best practices and design practices
- Using gui classes and packages
- Develop a substantial software application using class libraries and
  design patterns.

** Books
:PROPERTIES:
:CUSTOM_ID: books
:END:
- Head First Java 3rd ed

** Online ref
:PROPERTIES:
:CUSTOM_ID: online-ref
:END:
- javase/7/docs/api/
- javafx
- javafx newboston gui tutorial series

** Engineering Problems
:PROPERTIES:
:CUSTOM_ID: engineering-problems
:END:
- Started 80 years ago
- Complex.
- Still learning.
- Advent of LLMs as helpers, crucial to understand fundamentals of
  coding.

** Reminder of pillars
:PROPERTIES:
:CUSTOM_ID: reminder-of-pillars
:END:
1. Abstraction
2. Inheritance
3. Polymorphism
4. Encapsulation

** OOP vs Funcitonal
:PROPERTIES:
:CUSTOM_ID: oop-vs-funcitonal
:END:
*** OOP
:PROPERTIES:
:CUSTOM_ID: oop
:END:
- Objects

1. Abstraction
2. Inheritance
3. Polymorphism
4. Encapsulation ### Functional

- Pure functions

- Avoids boilerplate

- See [[OOP/Design patterns]]

- Next lecture [[Interfaces]]
